{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "Notify-MDC-Reco-MailTeams",
        "description": "This playbook will notify Microsoft Defender for Cloud Security Recommendation to Email and Microsoft Teams.",
        "lastUpdateTime": "2024-08-30T00:00:00.000Z",
        "tags": [ "Security" ],
        "author": {
            "name": "Hisashi Nakada"
        }
    },
    "parameters": {
        "PlayBookName": {
            "defaultValue": "Notify-MDC-Reco-MailTeams",
            "type": "String"
        },
        "ComplianceEmailAddress": {
            "defaultValue": "<username>@<domain>",
            "type": "string"
        }
    },
    "variables": {
        "ASCAssessmentConnectionName": "[concat('ascassessment-', parameters('PlaybookName'))]",
        "office365ConnectionName": "[concat('office365-', parameters('PlaybookName'))]",
        "MicrosoftTeamsConnectionName":  "[concat('MicrosoftTeams-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('ASCAssessmentConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('PlayBookName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/ascassessment')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('office365ConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('PlayBookName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('MicrosoftTeamsConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('PlaybookName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/teams')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "LogicAppsCategory": "security"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('ASCAssessmentConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('office365ConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftTeamsConnectionName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "MLEmailAddress": {
                            "defaultValue": "[parameters('ComplianceEmailAddress')]",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "When_an_Azure_Security_Center_Recommendation_is_created_or_triggered": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['ascassessment']['connectionId']"
                                    }
                                },
                                "path": "/Microsoft.Security/Assessment/subscribe"
                            }
                        }
                    },
                    "actions": {
                        "CreateHTMLbody": {
                            "runAfter": {
                                "IF-GetOwnerTag": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "htmlbody",
                                        "type": "string",
                                        "value": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n<meta charset=\"UTF-8\">\n<title>Security Policy alert</title>\n<style>\n  body { font-family: Arial, sans-serif; }\n  .header { background-color: #4CAF50; color: white; padding: 1px; text-align: center; }\n  .content { margin: 10px; padding: 10px; }\n  .footer { background-color: #f2f2f2; color: black; padding: 1px; text-align: center; }\n</style>\n</head>\n<body>\n  <div class=\"header\">\n    <h2>Security Policy alert</h2>\n  </div>\n  <div class=\"content\">\n    <p>Hello,  @{variables('OwnerEmail')}</p>\n    <p>Microsoft Defender for Cloud has detected security policy violation on @{split(variables('IDComponents'), '/')[8]}.</p>\n    <table>\n      <tr>\n        <td><strong>Affected Resouce</strong></td>\n        <td>@{split(variables('IDComponents'), '/')[8]}</td>\n      </tr>\n      <tr>\n      <tr>\n      <tr>\n        <td><strong>Affected Resouce Type</strong></td>\n        <td>@{triggerBody()?['properties']?['resourceDetails']?['resourceType']}</td>\n      </tr>\n      <tr>\n      <tr>\n        <td><strong>Subscription id</strong></td>\n        <td>@{split(variables('IDComponents'), '/')[2]}</td>\n      </tr>\n      <tr>\n        <td><strong>Detected Time</strong></td>\n        <td>@{triggerBody()?['properties']?['status']?['statusChangeDate']}\n      </tr>\n      <tr>\n        <td><strong>Recommendation name</strong></td>\n        <td>@{triggerBody()?['properties']?['metadata']?['displayName']}</td>\n      </tr>\n      <tr>\n        <td><strong>Description</strong></td>\n        <td>@{triggerBody()?['properties']?['metadata']?['description']}</td>\n      </tr>\n      <tr>\n        <td><strong>Recommendation  Steps</strong></td>\n        <td>@{triggerBody()?['properties']?['metadata']?['remediationDescription']}</td>\n      </tr>\n      <tr>\n        <td><strong>URL to Defender for Cloud</strong></td>\n        <td><a href=\"https://@{triggerBody()?['properties']?['links']?['azurePortalUri']}\">CLICK</a></td>\n      </tr>\n    </table>\n    @{variables('AddComments')}\n  </div>\n  <div class=\"footer\">\n    <p>2024 XXXX Corp Ltd</p>\n  </div>\n</body>\n</html>"
                                    }
                                ]
                            }
                        },
                        "GetTAGs": {
                            "runAfter": {
                                "Initialize-Comments": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://management.azure.com",
                                    "type": "ManagedServiceIdentity"
                                },
                                "method": "GET",
                                "uri": "https://management.azure.com/@{variables('IDComponents')}/providers/Microsoft.Resources/tags/default?api-version=2021-04-01"
                            },
                            "description": "GetTAGs get the resource TAGs from the IDComponents variable"
                        },
                        "IF-GetOwnerTag": {
                            "actions": {
                                "Set-Comments": {
                                    "runAfter": {
                                        "Set-OwnerEmail": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToStringVariable",
                                    "inputs": {
                                        "name": "AddComments",
                                        "value": "<hr>\n本対応について不明な場合は、主管部署にて対応いただくか保守ベンダーに相談して対処をお願いします。\n保守ベンダーに相談しても対処法が不明な場合は<a href=\"mailto:@{parameters('MLEmailAddress')}?subject=Defender for Cloud CWPP アラートお問い合わせ\">こちら</a>へ、対処状況の進捗および不明点の詳細をメールしてください。\n<hr>"
                                    }
                                },
                                "Set-OwnerEmail": {
                                    "runAfter": {},
                                    "type": "AppendToStringVariable",
                                    "inputs": {
                                        "name": "OwnerEmail",
                                        "value": "@body('GetTAGs')?['properties/tags']?['Owner']"
                                    }
                                }
                            },
                            "runAfter": {
                                "GetTAGs": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Set-MLEmail": {
                                        "runAfter": {},
                                        "type": "AppendToStringVariable",
                                        "inputs": {
                                            "name": "OwnerEmail",
                                            "value": "@parameters('MLEmailAddress')"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@empty(body('GetTAGs')?['properties/tags']?['Owner'])",
                                            false
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Initialize-Comments": {
                            "runAfter": {
                                "Initialize-OwnerEmail": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "AddComments",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize-IDComponents": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IDComponents",
                                        "type": "string",
                                        "value": "@{triggerBody()?['properties']?['resourceDetails']?['id']}"
                                    }
                                ]
                            },
                            "description": "The IDComponents variable gets the Azure resource ID"
                        },
                        "Initialize-OwnerEmail": {
                            "runAfter": {
                                "Initialize-IDComponents": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "OwnerEmail",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Send-HTMLemail": {
                            "runAfter": {
                                "CreateHTMLbody": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "Body": "<p>@{variables('htmlbody')}</p>",
                                    "Importance": "High",
                                    "Subject": "Microsoft Defender for Cloud Recommendation for your resource",
                                    "To": "@variables('OwnerEmail')"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/Mail"
                            }
                        },
                        "Send-MicrosoftTeams": {
                            "runAfter": {
                                "IF-GetOwnerTag": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "messageBody": "{\n    \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",\n    \"type\": \"AdaptiveCard\",\n    \"version\": \"1.6\",\n    \"msteams\": {\n        \"width\": \"Full\"\n    },\n    \"body\": [\n        {\n            \"type\": \"Container\",\n            \"items\": [\n                {\n                    \"type\": \"TextBlock\",\n                    \"text\": \"Defender for Cloud CSPM Alerts\",\n                    \"weight\": \"Bolder\",\n                    \"size\": \"Medium\"\n                },\n                {\n                    \"type\": \"ColumnSet\",\n                    \"columns\": [\n                        {\n                            \"type\": \"Column\",\n                            \"width\": \"auto\",\n                            \"items\": [\n                                {\n                                    \"type\": \"Image\",\n                                    \"url\": \"https://connectoricons-prod.azureedge.net/releases/v1.0.1632/1.0.1632.3274/ascalert/icon.png\",\n                                    \"size\": \"Small\",\n                                    \"style\": \"Person\"\n                                }\n                            ]\n                        },\n                        {\n                            \"type\": \"Column\",\n                            \"width\": \"stretch\",\n                            \"items\": [\n                                {\n                                    \"type\": \"TextBlock\",\n                                    \"text\": \"Owner : @{variables('OwnerEmail')}\",\n                                    \"weight\": \"Bolder\",\n                                    \"wrap\": true\n                                },\n                                {\n                                    \"type\": \"TextBlock\",\n                                    \"spacing\": \"None\",\n                                    \"text\": \"@{triggerBody()?['properties']?['status']?['statusChangeDate']}\",\n                                    \"isSubtle\": true,\n                                    \"wrap\": true\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            \"type\": \"Container\",\n            \"items\": [\n                {\n                    \"type\": \"TextBlock\",\n                    \"text\": \"Recommendation\",\n                    \"color\": \"warning\",\n                    \"wrap\": true\n                },\n                {\n                    \"type\": \"TextBlock\",\n                    \"text\": \"@{triggerBody()?['properties']?['metadata']?['displayName']}\",\n                    \"weight\": \"Bolder\",\n                    \"wrap\": true\n                },\n                {\n                    \"type\": \"TextBlock\",\n                    \"text\": \"Description\",\n                    \"color\": \"warning\",\n                    \"wrap\": true\n                },\n                {\n                    \"type\": \"TextBlock\",\n                    \"text\": \"@{triggerBody()?['properties']?['metadata']?['description']}\",\n                    \"wrap\": true\n                },\n                {\n                    \"type\": \"FactSet\",\n                    \"facts\": [\n                        {\n                            \"title\": \"Affected Resouce\",\n                            \"value\": \"@{split(variables('IDComponents'), '/')[8]}\"\n                        },\n                        {\n                            \"title\": \"Affected Resouce Type\",\n                            \"value\": \"@{triggerBody()?['properties']?['resourceDetails']?['resourceType']}\"\n                        },\n                        {\n                            \"title\": \"Subscription id\",\n                            \"value\": \"@{split(variables('IDComponents'), '/')[2]}\"\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"actions\": [\n        {\n            \"type\": \"Action.OpenUrl\",\n            \"title\": \"Click to Microsoft Defender for Cloud\",\n            \"url\": \"https://@{triggerBody()?['properties']?['links']?['azurePortalUri']}\"\n        }\n    ]\n}",
                                    "recipient": {
                                        "channelId": "",
                                        "groupId": ""
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['teams']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v1.0/teams/conversation/adaptivecard/poster/@{encodeURIComponent('User')}/location/@{encodeURIComponent('Channel')}"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "office365": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('office365ConnectionName'))]",
                                "connectionName": "[variables('Office365ConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                            },
                            "ascassessment": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('ASCAssessmentConnectionName'))]",
                                "connectionName": "[variables('ASCAssessmentConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/ascassessment')]"
                            },
                            "teams": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftTeamsConnectionName'))]",
                                "connectionName": "[variables('MicrosoftTeamsConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/teams')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}